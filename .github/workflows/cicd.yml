name: Backend Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Touch .env
        run: |
          touch ./.env
          touch ./app/.env
          echo "BUCKET_NAME=${{ secrets.BUCKET_NAME }}" >> ./.env
          echo "BUCKET_ACCESS_KEY=${{ secrets.BUCKET_ACCESS_KEY }}" >> ./.env
          echo "BUCKET_SECRET_KEY=${{ secrets.BUCKET_SECRET_KEY }}" >> ./.env
          echo "BUCKET_REGION=${{ secrets.BUCKET_REGION }}" >> ./.env
          echo "BUCKET_URL_PREFIX=${{ secrets.BUCKET_URL_PREFIX }}" >> ./.env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> ./.env
          echo "API_KEY=${{ secrets.GPT_KEY }}" >> ./.env
          echo "BUCKET_NAME=${{ secrets.BUCKET_NAME }}" >> ./app/.env
          echo "BUCKET_ACCESS_KEY=${{ secrets.BUCKET_ACCESS_KEY }}" >> ./app/.env
          echo "BUCKET_SECRET_KEY=${{ secrets.BUCKET_SECRET_KEY }}" >> ./app/.env
          echo "BUCKET_REGION=${{ secrets.BUCKET_REGION }}" >> ./app/.env
          echo "BUCKET_URL_PREFIX=${{ secrets.BUCKET_URL_PREFIX }}" >> ./app/.env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> ./app/.env
          echo "API_KEY=${{ secrets.GPT_KEY }}" >> ./app/.env

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          ecr: auto
          logout: true
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Build and push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_REGISTRY_URL }}:backend
          cache-from: type=gha  # gha = Guthub Actions 용 캐시
          cache-to: type=gha,mode=max

      - name: Deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.BASTION_HOST }}
          username: ${{ secrets.BASTION_USER }}
          key: ${{ secrets.KEY }}
          script: |
            ssh -i ${{ secrets.PEM_PATH }} ubuntu@${{ secrets.PRIVATE_EC2_IP }} << 'EOF'
              sudo docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
              sudo docker stop backend
              sudo docker pull ${{ secrets.DOCKERHUB_REGISTRY_URL }}:backend
              sudo docker run -d -p 8000:8000 --rm --name backend ${{ secrets.DOCKERHUB_REGISTRY_URL }}:backend
              sudo docker image prune -f
            EOF
